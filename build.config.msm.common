################################################################################
## DTB general support
DTB_DIR=vendor/oplus/lemonadev

function clean_dtbs() {
	rm -rf ${OUT_DIR}/arch/${ARCH}/boot/dts
}
append_cmd POST_DEFCONFIG_CMDS 'clean_dtbs'

FILES+="
arch/${ARCH}/boot/dts/${DTB_DIR}/*.dtb*
arch/${ARCH}/boot/dts/${DTB_DIR}/dtbo.img
"

################################################################################
## Globally enable user build variant
export TARGET_BUILD_VARIANT=user

################################################################################
## DT Overlay
function add_dt_overlay_defconfig() {
	${KERNEL_DIR}/scripts/config --file ${OUT_DIR}/.config \
	  -e BUILD_ARM64_DT_OVERLAY
	(cd ${KERNEL_DIR} && make "${TOOL_ARGS[@]}" O=${OUT_DIR} ${MAKE_ARGS} olddefconfig)
}
if [ ! -z $DT_OVERLAY_SUPPORT ] && [ ! $DT_OVERLAY_SUPPORT -eq "0" ]; then
	append_cmd POST_DEFCONFIG_CMDS 'add_dt_overlay_defconfig'
fi

################################################################################
## Variant Selection
if [ -z "${VARIANT}" ] || [ "${VARIANT}" == "default" ]; then
	VARIANT="${VARIANTS[0]}"
fi

if [ ! -z $MSM_ARCH ]; then
	BRANCH+=-${MSM_ARCH}
fi

if [ ! -z $VARIANT ]; then
	BRANCH+=-${VARIANT}
fi

################################################################################
## menuconfig
function menuconfig() {
	(cd ${KERNEL_DIR} && make "${TOOL_ARGS[@]}" O=${OUT_DIR} ${MAKE_ARGS} ${1:-menuconfig})
	(cd ${KERNEL_DIR} && make "${TOOL_ARGS[@]}" O=${OUT_DIR} ${MAKE_ARGS} savedefconfig)
	mv ${OUT_DIR}/defconfig ${KERNEL_DIR}/arch/${ARCH}/configs/${DEFCONFIG}
}
export -f menuconfig
# Configuration options to build images for MSM targets
# Must be included AFTER build.config.msm.<target>

MODULES_LIST=${KERNEL_DIR}/modules.list.${CONFIG_TARGET}

# boot image macros
BUILD_BOOT_IMG=1
BUILD_INITRAMFS=1

################################################################################
## DT Overlay
LIBUFDT_PREBUILTS_BIN=tools/libufdt/utils/src
function make_dtbo_img() {
	mkdir -p ${DIST_DIR}/
	mkdtboimg.py create ${DIST_DIR}/dtbo.img --page_size=${PAGE_SIZE} ${DIST_DIR}/*.dtbo
}
if [ ! -z $DT_OVERLAY_SUPPORT ] && [ ! $DT_OVERLAY_SUPPORT -eq "0" ]; then
	append_cmd DIST_CMDS 'make_dtbo_img'
fi

################################################################################
## Miscellaneous
function determine_result_image {
	if [[ $(${KERNEL_DIR}/scripts/config \
		--file ${OUT_DIR}/.config \
		--state CONFIG_BUILD_${ARCH^^}_UNCOMPRESSED_KERNEL) \
		== 'y' ]];
	then
		KERNEL_BINARY=Image
	else
		KERNEL_BINARY=Image.gz
	fi
}
append_cmd DIST_CMDS 'determine_result_image'
